apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cache
  namespace: ml-scheduler
  labels:
    app: redis-cache
    component: caching
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-cache
  template:
    metadata:
      labels:
        app: redis-cache
        component: caching
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        ports:
        - containerPort: 6379
          name: redis
        command: ["redis-server"]
        args:
        - --maxmemory 2gb
        - --maxmemory-policy allkeys-lru
        - --save 900 1
        - --save 300 10
        - --save 60 10000
        - --appendonly yes
        - --appendfsync everysec
        - --tcp-keepalive 300
        - --timeout 0
        - --databases 16
        resources:
          requests:
            memory: "1Gi"
            cpu: "100m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-cache-pvc
      - name: redis-config
        configMap:
          name: redis-config
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node-role.kubernetes.io/worker"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cache-service
  namespace: ml-scheduler
  labels:
    app: redis-cache
    component: caching
spec:
  selector:
    app: redis-cache
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-cache-pvc
  namespace: ml-scheduler
  labels:
    app: redis-cache
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: ml-scheduler
  labels:
    app: redis-cache
data:
  redis.conf: |
    # Redis configuration for ML scheduler caching
    
    # Memory management
    maxmemory 2gb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    appendonly yes
    appendfsync everysec
    
    # Network
    tcp-keepalive 300
    timeout 0
    
    # General
    databases 16
    
    # Logging
    loglevel notice
    
    # Security (disable dangerous commands)
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    rename-command DEBUG ""
    rename-command CONFIG ""
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-cache-monitor
  namespace: ml-scheduler
  labels:
    app: redis-cache
spec:
  selector:
    matchLabels:
      app: redis-cache
  endpoints:
  - port: redis-exporter
    interval: 30s
    path: /metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter
  namespace: ml-scheduler
  labels:
    app: redis-exporter
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-exporter
  template:
    metadata:
      labels:
        app: redis-exporter
        component: monitoring
    spec:
      containers:
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.55.0
        ports:
        - containerPort: 9121
          name: redis-exporter
        env:
        - name: REDIS_ADDR
          value: "redis://redis-cache-service:6379"
        - name: REDIS_EXPORTER_LOG_FORMAT
          value: "json"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter-service
  namespace: ml-scheduler
  labels:
    app: redis-exporter
    component: monitoring
spec:
  selector:
    app: redis-exporter
  ports:
  - port: 9121
    targetPort: 9121
    name: redis-exporter