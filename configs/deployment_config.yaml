components:
  xgboost_predictor:
    type: ml_model
    image: hydatis/xgboost-predictor:latest
    replicas: 2
    ports: [8001]
    environment:
      MLFLOW_TRACKING_URI: "http://10.110.190.32:31380"
      PROMETHEUS_ENDPOINT: "http://10.110.190.83:9090"
      MODEL_REGISTRY: "production"
      LOG_LEVEL: "INFO"
      BATCH_SIZE: "32"
      PREDICTION_TIMEOUT: "5000"
    resources:
      requests:
        cpu: "500m"
        memory: "1Gi"
      limits:
        cpu: "2"
        memory: "4Gi"
    volumes:
      - name: model-storage
        size: "10Gi"
        persistentVolumeClaim:
          claimName: xgboost-model-pvc
        mountPath: "/app/models"
    health_check:
      path: "/health"
      port: 8001
      initial_delay: 30
      period: 10
    dependencies: []

  qlearning_optimizer:
    type: ml_model
    image: hydatis/qlearning-optimizer:latest
    replicas: 2
    ports: [8002]
    environment:
      MLFLOW_TRACKING_URI: "http://10.110.190.32:31380"
      PROMETHEUS_ENDPOINT: "http://10.110.190.83:9090"
      PYTORCH_DEVICE: "cpu"
      PYTORCH_THREADS: "4"
      LOG_LEVEL: "INFO"
      EXPLORATION_RATE: "0.1"
      LEARNING_RATE: "0.001"
    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "4"
        memory: "8Gi"
    volumes:
      - name: model-storage
        size: "15Gi"
        persistentVolumeClaim:
          claimName: qlearning-model-pvc
        mountPath: "/app/models"
      - name: experience-replay
        size: "5Gi"
        persistentVolumeClaim:
          claimName: qlearning-replay-pvc
        mountPath: "/app/replay"
    health_check:
      path: "/health"
      port: 8002
      initial_delay: 45
      period: 15
    dependencies: []

  anomaly_detector:
    type: ml_model
    image: hydatis/anomaly-detector:latest
    replicas: 2
    ports: [8003]
    environment:
      MLFLOW_TRACKING_URI: "http://10.110.190.32:31380"
      PROMETHEUS_ENDPOINT: "http://10.110.190.83:9090"
      ALERT_MANAGER_URL: "http://alert-manager-service:8080"
      LOG_LEVEL: "INFO"
      ANOMALY_THRESHOLD: "0.1"
      CONTAMINATION_RATE: "0.05"
    resources:
      requests:
        cpu: "500m"
        memory: "1Gi"
      limits:
        cpu: "2"
        memory: "4Gi"
    volumes:
      - name: model-storage
        size: "8Gi"
        persistentVolumeClaim:
          claimName: anomaly-model-pvc
        mountPath: "/app/models"
    health_check:
      path: "/health"
      port: 8003
      initial_delay: 30
      period: 10
    dependencies: []

  ml_gateway:
    type: api_service
    image: hydatis/ml-gateway:latest
    replicas: 3
    ports: [8000]
    environment:
      XGBOOST_SERVICE_URL: "http://xgboost-service:8001"
      QLEARNING_SERVICE_URL: "http://qlearning-service:8002"
      ANOMALY_SERVICE_URL: "http://anomaly-service:8003"
      PROMETHEUS_ENDPOINT: "http://10.110.190.83:9090"
      LOG_LEVEL: "INFO"
      REQUEST_TIMEOUT: "30000"
      ENSEMBLE_STRATEGY: "weighted_voting"
    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "4"
        memory: "8Gi"
    volumes: []
    health_check:
      path: "/health"
      port: 8000
      initial_delay: 20
      period: 5
    dependencies: ["xgboost_predictor", "qlearning_optimizer", "anomaly_detector"]

  scheduler_plugin:
    type: scheduler
    image: hydatis/scheduler-plugin:latest
    replicas: 1
    ports: [9443]
    environment:
      ML_GATEWAY_URL: "http://ml-gateway-service:8000"
      PROMETHEUS_ENDPOINT: "http://10.110.190.83:9090"
      CLUSTER_NAME: "HYDATIS"
      LOG_LEVEL: "INFO"
      SCHEDULER_NAME: "hydatis-ml-scheduler"
      WEBHOOK_TIMEOUT: "30"
    resources:
      requests:
        cpu: "500m"
        memory: "1Gi"
      limits:
        cpu: "2"
        memory: "4Gi"
    volumes:
      - name: scheduler-config
        configMap:
          name: scheduler-plugin-config
        mountPath: "/etc/scheduler"
    health_check:
      path: "/healthz"
      port: 9443
      initial_delay: 30
      period: 10
    dependencies: ["ml_gateway"]

  monitoring_dashboard:
    type: monitoring
    image: hydatis/monitoring-dashboard:latest
    replicas: 1
    ports: [8080]
    environment:
      ML_GATEWAY_URL: "http://ml-gateway-service:8000"
      PROMETHEUS_ENDPOINT: "http://10.110.190.83:9090"
      ALERT_MANAGER_URL: "http://alert-manager-service:8080"
      LOG_LEVEL: "INFO"
      REFRESH_INTERVAL: "30"
      DASHBOARD_TITLE: "HYDATIS ML Scheduler Monitor"
    resources:
      requests:
        cpu: "200m"
        memory: "512Mi"
      limits:
        cpu: "1"
        memory: "2Gi"
    volumes: []
    health_check:
      path: "/health"
      port: 8080
      initial_delay: 15
      period: 5
    dependencies: ["ml_gateway"]

  alert_manager:
    type: monitoring
    image: hydatis/alert-manager:latest
    replicas: 1
    ports: [8080]
    environment:
      PROMETHEUS_ENDPOINT: "http://10.110.190.83:9090"
      SLACK_WEBHOOK_URL: ""
      EMAIL_SMTP_SERVER: ""
      LOG_LEVEL: "INFO"
      ALERT_CORRELATION_WINDOW: "300"
    resources:
      requests:
        cpu: "200m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "1Gi"
    volumes:
      - name: alert-config
        configMap:
          name: alert-manager-config
        mountPath: "/etc/alerts"
    health_check:
      path: "/health"
      port: 8080
      initial_delay: 15
      period: 5
    dependencies: []

deployment_settings:
  namespace: "ml-scheduler"
  storage_class: "longhorn"
  image_pull_policy: "Always"
  restart_policy: "Always"
  
  resource_defaults:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

  monitoring:
    prometheus_scrape: true
    metrics_port: 9090
    
  security:
    run_as_non_root: true
    read_only_root_filesystem: false
    allow_privilege_escalation: false

cluster_config:
  name: "HYDATIS"
  masters:
    - "10.110.190.31"
    - "10.110.190.32"
    - "10.110.190.33"
  workers:
    - "10.110.190.34"
    - "10.110.190.35"
    - "10.110.190.36"
  services:
    prometheus: "http://10.110.190.83:9090"
    mlflow: "http://10.110.190.32:31380"
    storage: "longhorn"